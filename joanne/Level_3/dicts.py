import datetime
import subprocess
import joanne
import numpy as np

dim_attrs = {
    "alt": {
        "standard_name": "geopotential_height",
        "long_name": "geopotential height",
        "description": "height obtained by integrating upwards the atmospheric thickness estimated from the hypsometric equation",
        "units": "m",
        "axis": "Z",
        "positive": "up",
        "bounds": "alt_bnds",
    },
    "sonde_id": {
        "description": "unique sonde ID",
        "long_name": "sonde identifier",
        "cf_role": "trajectory_id",
        "units": "",
    },
}

list_of_vars = [
    # "sounding",
    "launch_time",
    "interpolated_time",
    # "alt",
    "lat",
    "lon",
    "p",
    "ta",
    "rh",
    "wspd",
    "wdir",
    "u",
    "v",
    "theta",
    "q",
    # "PW",
    # "static_stability",
    "low_height_flag",
    # "cloud_flag",
    "platform_id",
    "flight_altitude",
    "flight_lat",
    "flight_lon",
    "sonde_id",
    # "N_ptu",
    "N_p",
    "N_ta",
    "N_rh",
    "N_gps",
    # "m_ptu",
    "m_p",
    "m_ta",
    "m_rh",
    "m_gps",
]

nc_attrs = {
    "sounding": {
        "standard_name": "sounding",
        "long_name": "sonde number",
        "units": "",
        "axis": "T",
    },
    "sonde_id": {
        "description": "unique sonde ID",
        "long_name": "sonde identifier",
        "cf_role": "trajectory_id",
        "units": "",
    },
    "launch_time": {
        "standard_name": "time",
        "long_name": "time of dropsonde launch",
        "axis": "T",
    },
    "alt": {
        "standard_name": "geopotential_height",
        "long_name": "geopotential height",
        "description": "height obtained by integrating upwards the atmospheric thickness estimated from the hypsometric equation",
        "units": "m",
        "axis": "Z",
        "positive": "up",
    },
    "lat": {
        "standard_name": "latitude",
        "long_name": "latitude",
        "units": "degree_north",
        "axis": "Y",
    },
    "lon": {
        "standard_name": "longitude",
        "long_name": "longitude",
        "units": "degree_east",
        "axis": "X",
    },
    "p": {
        "standard_name": "air_pressure",
        "long_name": "atmospheric pressure",
        "units": "Pa",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "ta": {
        "standard_name": "air_temperature",
        "long_name": "dry bulb temperature",
        "units": "K",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "theta": {
        "standard_name": "air_potential_temperature",
        "long_name": "air potential temperature",
        "units": "K",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "rh": {
        "standard_name": "relative_humidity",
        "long_name": "relative humidity",
        "units": "",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "q": {
        "standard_name": "specific_humidity",
        "long_name": "specific humidity",
        "units": "kg kg-1",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "wspd": {
        "standard_name": "wind_speed",
        "long_name": "wind speed",
        "units": "m s-1",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "u": {
        "standard_name": "eastward_wind",
        "long_name": "u-component of the wind",
        "units": "m s-1",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "v": {
        "standard_name": "northward_wind",
        "long_name": "v-component of the wind",
        "units": "m s-1",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "wdir": {
        "standard_name": "wind_from_direction",
        "long_name": "wind direction",
        "units": "degree",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
    },
    "low_height_flag": {
        "long_name": "flag if flight height < 4 km when dropsonde was launched",
        "flag_values": np.array([0, 1], dtype="int8"),
        "flag_meanings": "flight_height_at_or_above_4_km flight_height_below_4_km",
        "units": "",
        "valid_range": "0, 1",
    },
    "platform_id": {
        "standard_name": "platform_id",
        "long_name": "platform from which dropsonde was launched",
        "units": "",
        "coordinates": "launch_time sonde_id",
    },
    "flight_altitude": {
        "standard_name": "altitude",
        "long_name": "altitude of the aircraft when dropsonde was launched",
        "units": "m",
        "coordinates": "launch_time sonde_id",
        "positive": "up",
    },
    "flight_lat": {
        "standard_name": "latitude",
        "long_name": "north latitude of the aircraft when dropsonde was launched",
        "units": "degree_north",
        "coordinates": "launch_time sonde_id",
    },
    "flight_lon": {
        "standard_name": "longitude",
        "long_name": "east longitude of the aircraft when dropsonde was launched",
        "units": "degree_east",
        "coordinates": "launch_time sonde_id",
    },
    "N_p": {
        "long_name": "number of observations used to derive level 3 pressure data",
        "units": "",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
        "standard_name": "number_of_observations",
    },
    "N_ta": {
        "long_name": "number of observations used to derive level 3 temperature data",
        "units": "",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
        "standard_name": "number_of_observations",
    },
    "N_rh": {
        "long_name": "number of observations used to derive level 3 relative humidity data",
        "units": "",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
        "standard_name": "number_of_observations",
    },
    "N_gps": {
        "long_name": "number of observations used to derive level 3 GPS-data",
        "units": "",
        "coordinates": "launch_time sonde_id lon lat alt interpolated_time",
        "standard_name": "number_of_observations",
    },
    "m_p": {
        "long_name": "bin_method",
        "description": "method used to derive Level-3 pressure data",
        "flag_values": np.array([0, 1, 2], dtype="int8"),
        "flag_meanings": "no_data interpolation averaging",
        "units": "",
    },
    "m_ta": {
        "long_name": "bin_method",
        "description": "method used to derive Level-3 temperature data",
        "flag_values": np.array([0, 1, 2], dtype="int8"),
        "flag_meanings": "no_data interpolation averaging",
        "units": "",
    },
    "m_rh": {
        "long_name": "bin_method",
        "description": "method used to derive Level-3 relative humidity data",
        "flag_values": np.array([0, 1, 2], dtype="int8"),
        "flag_meanings": "no_data interpolation averaging",
        "units": "",
    },
    "m_gps": {
        "long_name": "bin_method",
        "description": "method used to derive Level-3 GPS-data",
        "flag_values": np.array([0, 1, 2], dtype="int8"),
        "flag_meanings": "no_data interpolation averaging",
        "units": "",
    },
    "interpolated_time": {
        "standard_name": "time",
        "long_name": "interpolated time",
        "description": "value of time (original independent dimension) linearly interpolated to altitude grid",
        "axis": "T",
    },
}

nc_dims = {
    "sounding": ["sonde_id"],
    "sonde_id": ["sonde_id"],
    "launch_time": ["sonde_id"],
    "alt": ["alt"],
    "lat": ["sonde_id", "alt"],
    "lon": ["sonde_id", "alt"],
    "p": ["sonde_id", "alt"],
    "ta": ["sonde_id", "alt"],
    "rh": ["sonde_id", "alt"],
    "wspd": ["sonde_id", "alt"],
    "wdir": ["sonde_id", "alt"],
    "u": ["sonde_id", "alt"],
    "v": ["sonde_id", "alt"],
    "theta": ["sonde_id", "alt"],
    "q": ["sonde_id", "alt"],
    "PW": ["sonde_id"],
    "static_stability": ["sonde_id", "alt"],
    "low_height_flag": ["sonde_id"],
    "cloud_flag": ["sonde_id", "alt"],
    "platform_id": ["sonde_id"],
    "flight_altitude": ["sonde_id"],
    "flight_lat": ["sonde_id"],
    "flight_lon": ["sonde_id"],
    "N_p": ["sonde_id", "alt"],
    "N_ta": ["sonde_id", "alt"],
    "N_rh": ["sonde_id", "alt"],
    "N_gps": ["sonde_id", "alt"],
    "m_p": ["sonde_id", "alt"],
    "m_ta": ["sonde_id", "alt"],
    "m_rh": ["sonde_id", "alt"],
    "m_gps": ["sonde_id", "alt"],
    "interpolated_time": ["sonde_id", "alt"],
}

nc_global_attrs = {
    "title": "EUREC4A JOANNE Level-3",
    "doi" : f'{joanne.data_doi}'
    "created with": f"doi:{joanne.software_doi}",
    "Conventions": "CF-1.8",
    "campaign_id": "EUREC4A",
    "project_id": "JOANNE",
    "instrument_id": "Vaisala RD-41",
    "product_id": "Level-3",
    "AVAPS_software_version": "Version 4.1.2",
    "ASPEN_version": "BatchAspen v3.4.3",
    "JOANNE_version": joanne.__version__,
    "author": "Geet George",
    "author_email": "geet.george@mpimet.mpg.de",
    "featureType": "trajectory",
    "creation_time": str(datetime.datetime.utcnow()) + " UTC",
}
